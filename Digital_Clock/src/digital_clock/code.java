/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package digital_clock;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author User
 */
public class code extends javax.swing.JFrame {

    /**
     * Creates new form code
     */
    private int Hr, min,sec;
    static int hr =0, mnt =0, scnd =0, milisecond=0;
    static boolean state = true;
    Timer time;
    private int counter=0;
    private String lap="";
    
    
    public code() {
        initComponents();
        date_time();
        spstart.setVisible(false);
        spresume.setVisible(false);
        spreset.setVisible(false);
        spstopwatch.setVisible(false);
        sptimer.setVisible(false);
        spStart.setVisible(false);
        stlap.setEnabled(false);
        splap.setVisible(false);
        sppause.setVisible(false);
        spStop.setVisible(false);
        resume.setEnabled(false);
        reset.setEnabled(false);
        timerpause.setEnabled(false);
        timerstop.setEnabled(false);
        localtime.setVisible(false);
    }
    
    private int x=0,y=0;
    
    private void date_time()
    {
          new Timer(1000, (ActionEvent e) -> {
              LocalDateTime time1 = LocalDateTime.now();
              lblhour.setText(String.valueOf(time1.getHour()));
              lblminute.setText(String.valueOf(time1.getMinute()));
              lblsecond.setText(String.valueOf(time1.getSecond()));
              DateTimeFormatter dtf = DateTimeFormatter.ofPattern("hh   :    mm    :     ss  a");
              LocalDateTime now = LocalDateTime.now();
              localtime.setText(dtf.format(now));
          }).start();
        
        Date d = new Date();
        SimpleDateFormat date = new SimpleDateFormat("EEEE, MMMM d  yyyy");
       
      
        jLabel10.setText(date.format(d));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basepnl = new javax.swing.JPanel();
        dashboardpnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        clock = new javax.swing.JLabel();
        spclock = new javax.swing.JSeparator();
        stopwatch = new javax.swing.JLabel();
        spstopwatch = new javax.swing.JSeparator();
        timer = new javax.swing.JLabel();
        sptimer = new javax.swing.JSeparator();
        minimize = new javax.swing.JLabel();
        clockpnl = new javax.swing.JPanel();
        pnlclock = new javax.swing.JPanel();
        lblhour = new javax.swing.JLabel();
        lblminute = new javax.swing.JLabel();
        lblsecond = new javax.swing.JLabel();
        lbldot1 = new javax.swing.JLabel();
        lbldot2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        localtime = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        radio12 = new javax.swing.JRadioButton();
        radio24 = new javax.swing.JRadioButton();
        pnlstopwatch = new javax.swing.JPanel();
        mlsecond = new javax.swing.JLabel();
        dot1 = new javax.swing.JLabel();
        dot2 = new javax.swing.JLabel();
        start = new javax.swing.JLabel();
        resume = new javax.swing.JLabel();
        reset = new javax.swing.JLabel();
        spstart = new javax.swing.JSeparator();
        spresume = new javax.swing.JSeparator();
        spreset = new javax.swing.JSeparator();
        lblmnt = new javax.swing.JLabel();
        lblsncd = new javax.swing.JLabel();
        lblhr2 = new javax.swing.JLabel();
        splap = new javax.swing.JSeparator();
        stlap = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        pnltimer = new javax.swing.JPanel();
        hour = new javax.swing.JLabel();
        minute = new javax.swing.JLabel();
        second = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbhour = new javax.swing.JComboBox<>();
        cmbminute = new javax.swing.JComboBox<>();
        cmbsecond = new javax.swing.JComboBox<>();
        timerstart = new javax.swing.JLabel();
        timerstop = new javax.swing.JLabel();
        timerpause = new javax.swing.JLabel();
        spStop = new javax.swing.JSeparator();
        spStart = new javax.swing.JSeparator();
        sppause = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        basepnl.setBackground(new java.awt.Color(0, 0, 0));
        basepnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dashboardpnl.setBackground(new java.awt.Color(49, 57, 66));
        dashboardpnl.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dashboardpnlMouseDragged(evt);
            }
        });
        dashboardpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dashboardpnlMousePressed(evt);
            }
        });
        dashboardpnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei UI", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/digital_clock/image/clock.png"))); // NOI18N
        jLabel1.setText("Digital Clock");
        dashboardpnl.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        close.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        close.setForeground(new java.awt.Color(204, 204, 204));
        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setText("X");
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
        });
        dashboardpnl.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 30, 30));

        clock.setBackground(new java.awt.Color(49, 57, 66));
        clock.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        clock.setForeground(new java.awt.Color(255, 255, 255));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("Clock");
        clock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(49, 57, 66)));
        clock.setOpaque(true);
        clock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clockMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clockMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clockMouseExited(evt);
            }
        });
        dashboardpnl.add(clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 104, 40));
        dashboardpnl.add(spclock, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 104, 10));

        stopwatch.setBackground(new java.awt.Color(49, 57, 66));
        stopwatch.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        stopwatch.setForeground(new java.awt.Color(255, 255, 255));
        stopwatch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stopwatch.setText("Stop Watch");
        stopwatch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(49, 57, 66)));
        stopwatch.setOpaque(true);
        stopwatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopwatchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stopwatchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stopwatchMouseExited(evt);
            }
        });
        dashboardpnl.add(stopwatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, -1, 40));
        dashboardpnl.add(spstopwatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 110, 10));

        timer.setBackground(new java.awt.Color(49, 57, 66));
        timer.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        timer.setForeground(new java.awt.Color(255, 255, 255));
        timer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timer.setText("Timer");
        timer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(49, 57, 66)));
        timer.setOpaque(true);
        timer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                timerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                timerMouseExited(evt);
            }
        });
        dashboardpnl.add(timer, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 100, 40));
        dashboardpnl.add(sptimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 100, 10));

        minimize.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        minimize.setForeground(new java.awt.Color(204, 204, 204));
        minimize.setText("-");
        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        dashboardpnl.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, -1, 30));

        basepnl.add(dashboardpnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 130));

        clockpnl.setLayout(new java.awt.CardLayout());

        pnlclock.setBackground(new java.awt.Color(0, 0, 0));
        pnlclock.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblhour.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        lblhour.setForeground(new java.awt.Color(255, 255, 255));
        lblhour.setText("00");
        pnlclock.add(lblhour, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, -1, -1));

        lblminute.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        lblminute.setForeground(new java.awt.Color(255, 255, 255));
        lblminute.setText("00");
        pnlclock.add(lblminute, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, -1));

        lblsecond.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        lblsecond.setForeground(new java.awt.Color(255, 255, 255));
        lblsecond.setText("00");
        pnlclock.add(lblsecond, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, -1, -1));

        lbldot1.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        lbldot1.setForeground(new java.awt.Color(255, 255, 255));
        lbldot1.setText(":");
        pnlclock.add(lbldot1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        lbldot2.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        lbldot2.setForeground(new java.awt.Color(255, 255, 255));
        lbldot2.setText(":");
        pnlclock.add(lbldot2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, -1, -1));

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Date");
        pnlclock.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 41, -1, -1));

        localtime.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        localtime.setForeground(new java.awt.Color(255, 255, 255));
        pnlclock.add(localtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 540, 70));

        jLabel13.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Format");
        pnlclock.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));

        radio12.setBackground(new java.awt.Color(0, 0, 0));
        radio12.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        radio12.setForeground(new java.awt.Color(255, 255, 255));
        radio12.setText("12 Hours");
        radio12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio12ActionPerformed(evt);
            }
        });
        pnlclock.add(radio12, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, -1, -1));

        radio24.setBackground(new java.awt.Color(0, 0, 0));
        radio24.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        radio24.setForeground(new java.awt.Color(255, 255, 255));
        radio24.setSelected(true);
        radio24.setText("24 Hours");
        radio24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio24ActionPerformed(evt);
            }
        });
        pnlclock.add(radio24, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, -1));

        clockpnl.add(pnlclock, "card3");

        pnlstopwatch.setBackground(new java.awt.Color(0, 0, 0));
        pnlstopwatch.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mlsecond.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        mlsecond.setForeground(new java.awt.Color(255, 255, 255));
        mlsecond.setText("00");
        pnlstopwatch.add(mlsecond, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, 40, -1));

        dot1.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        dot1.setForeground(new java.awt.Color(255, 255, 255));
        dot1.setText(":");
        pnlstopwatch.add(dot1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, -1, -1));

        dot2.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        dot2.setForeground(new java.awt.Color(255, 255, 255));
        dot2.setText(":");
        pnlstopwatch.add(dot2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, -1, -1));

        start.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        start.setForeground(new java.awt.Color(255, 255, 255));
        start.setText("Start");
        start.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startMouseClicked(evt);
            }
        });
        pnlstopwatch.add(start, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, -1, -1));

        resume.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        resume.setForeground(new java.awt.Color(255, 255, 255));
        resume.setText("Pause");
        resume.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resume.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resumeMouseClicked(evt);
            }
        });
        pnlstopwatch.add(resume, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, -1, -1));

        reset.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("Reset");
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });
        pnlstopwatch.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 180, -1, -1));

        spstart.setForeground(new java.awt.Color(255, 255, 255));
        pnlstopwatch.add(spstart, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, 60, 10));

        spresume.setForeground(new java.awt.Color(255, 255, 255));
        pnlstopwatch.add(spresume, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 70, 10));

        spreset.setForeground(new java.awt.Color(255, 255, 255));
        pnlstopwatch.add(spreset, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 63, 10));

        lblmnt.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        lblmnt.setForeground(new java.awt.Color(255, 255, 255));
        lblmnt.setText("00");
        pnlstopwatch.add(lblmnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 50, -1));

        lblsncd.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        lblsncd.setForeground(new java.awt.Color(255, 255, 255));
        lblsncd.setText("00");
        pnlstopwatch.add(lblsncd, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 50, -1));

        lblhr2.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        lblhr2.setForeground(new java.awt.Color(255, 255, 255));
        lblhr2.setText("00");
        pnlstopwatch.add(lblhr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 50, -1));

        splap.setForeground(new java.awt.Color(255, 255, 255));
        pnlstopwatch.add(splap, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, 60, 10));

        stlap.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        stlap.setForeground(new java.awt.Color(255, 255, 255));
        stlap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stlap.setText("Lap");
        stlap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stlap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stlapMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stlapMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                stlapMouseReleased(evt);
            }
        });
        pnlstopwatch.add(stlap, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 60, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Lap");
        pnlstopwatch.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jScrollPane2.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setBorder(null);
        jScrollPane2.setForeground(new java.awt.Color(204, 204, 204));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtarea.setEditable(false);
        txtarea.setBackground(new java.awt.Color(0, 0, 0));
        txtarea.setColumns(20);
        txtarea.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        txtarea.setForeground(new java.awt.Color(204, 204, 204));
        txtarea.setRows(5);
        txtarea.setBorder(null);
        jScrollPane2.setViewportView(txtarea);

        pnlstopwatch.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 180, 250));

        clockpnl.add(pnlstopwatch, "card2");

        pnltimer.setBackground(new java.awt.Color(0, 0, 0));
        pnltimer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hour.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        hour.setForeground(new java.awt.Color(255, 255, 255));
        hour.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hour.setText("00");
        pnltimer.add(hour, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 64, 60, -1));

        minute.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        minute.setForeground(new java.awt.Color(255, 255, 255));
        minute.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minute.setText("00");
        pnltimer.add(minute, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 64, 60, -1));

        second.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 36)); // NOI18N
        second.setForeground(new java.awt.Color(255, 255, 255));
        second.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        second.setText("00");
        pnltimer.add(second, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 64, 60, -1));

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(":");
        pnltimer.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 64, -1, -1));

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(":");
        pnltimer.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 64, -1, -1));

        cmbhour.setBackground(new java.awt.Color(204, 204, 204));
        cmbhour.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        cmbhour.setForeground(new java.awt.Color(255, 255, 255));
        cmbhour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        cmbhour.setBorder(null);
        cmbhour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbhourActionPerformed(evt);
            }
        });
        pnltimer.add(cmbhour, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 129, 60, -1));

        cmbminute.setBackground(new java.awt.Color(204, 204, 204));
        cmbminute.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        cmbminute.setForeground(new java.awt.Color(255, 255, 255));
        cmbminute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        cmbminute.setBorder(null);
        cmbminute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbminuteActionPerformed(evt);
            }
        });
        pnltimer.add(cmbminute, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 129, 60, -1));

        cmbsecond.setBackground(new java.awt.Color(204, 204, 204));
        cmbsecond.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        cmbsecond.setForeground(new java.awt.Color(255, 255, 255));
        cmbsecond.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        cmbsecond.setBorder(null);
        cmbsecond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbsecondActionPerformed(evt);
            }
        });
        pnltimer.add(cmbsecond, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 129, 60, -1));

        timerstart.setBackground(new java.awt.Color(0, 0, 0));
        timerstart.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 24)); // NOI18N
        timerstart.setForeground(new java.awt.Color(255, 255, 255));
        timerstart.setText("Start");
        timerstart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timerstart.setOpaque(true);
        timerstart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timerstartMouseClicked(evt);
            }
        });
        pnltimer.add(timerstart, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 231, -1, -1));

        timerstop.setBackground(new java.awt.Color(0, 0, 0));
        timerstop.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 24)); // NOI18N
        timerstop.setForeground(new java.awt.Color(255, 255, 255));
        timerstop.setText("Stop");
        timerstop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timerstop.setOpaque(true);
        timerstop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timerstopMouseClicked(evt);
            }
        });
        pnltimer.add(timerstop, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 231, -1, -1));

        timerpause.setBackground(new java.awt.Color(0, 0, 0));
        timerpause.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 24)); // NOI18N
        timerpause.setForeground(new java.awt.Color(255, 255, 255));
        timerpause.setText("Pause");
        timerpause.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timerpause.setOpaque(true);
        timerpause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timerpauseMouseClicked(evt);
            }
        });
        pnltimer.add(timerpause, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 231, -1, -1));

        spStop.setForeground(new java.awt.Color(255, 255, 255));
        pnltimer.add(spStop, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 269, 55, 10));

        spStart.setForeground(new java.awt.Color(255, 255, 255));
        pnltimer.add(spStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 269, 56, 10));

        sppause.setForeground(new java.awt.Color(255, 255, 255));
        pnltimer.add(sppause, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 269, 69, 10));

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SEC");
        pnltimer.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 40, -1));

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("HR");
        pnltimer.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 30, -1));

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("MIN");
        pnltimer.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 40, -1));

        clockpnl.add(pnltimer, "card4");

        basepnl.add(clockpnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 710, 320));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basepnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basepnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(707, 444));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeMouseClicked

    private void dashboardpnlMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardpnlMousePressed
        // TODO add your handling code here:
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_dashboardpnlMousePressed

    private void dashboardpnlMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardpnlMouseDragged
        // TODO add your handling code here:
        this.setLocation(evt.getXOnScreen()-x, evt.getYOnScreen()-y);
    }//GEN-LAST:event_dashboardpnlMouseDragged

    private void startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseClicked
        // TODO add your handling code here:
        spstart.setVisible(true);
        spreset.setVisible(false);
        spresume.setVisible(false);
        splap.setVisible(false);
        resume.setEnabled(true);
        reset.setEnabled(true);
        stlap.setEnabled(true);
        state =true;
        
         
        Thread t = new Thread()
        {
            @Override
            public void run()
            {
                while(true)
                {
                    if(state == true)
                    {
                        try 
                        {
                            sleep(1);
                            if(milisecond>999)
                            {
                                milisecond =0;
                                scnd++;
                            }
                            if(scnd>60)
                            {
                                milisecond =0;
                                scnd=0;
                                mnt++;
                            }
                            if(mnt>60)
                            {
                                milisecond =0;
                                scnd=0;
                                mnt =0; 
                                hr++;
                            }
                            
                            milisecond++;
                            if(milisecond<10)
                            {
                                mlsecond.setText(String.valueOf("0"+milisecond));
                            }
                            else 
                            {
                                mlsecond.setText(String.valueOf(milisecond));
                            }
                           
                            if(scnd<10)
                            {
                                lblsncd.setText(String.valueOf("0"+scnd));
                            }
                            else{
                                lblsncd.setText(String.valueOf(scnd));
                            }
                            if(mnt<10)
                            {
                                lblmnt.setText(String.valueOf("0"+mnt));
                            }
                            else 
                            {
                                lblmnt.setText(String.valueOf(mnt));
                            }
                            if(hr<10)
                            {
                                lblhr2.setText(String.valueOf("0"+hr));
                            }
                            else{
                                lblhr2.setText(String.valueOf(hr));
                            }
                            
                        } catch (InterruptedException e)
                        {
                            System.out.println(e);
                        }
                    }
                    else 
                    {
                        break;
                    }
                }
            }
        };t.start();
    }//GEN-LAST:event_startMouseClicked

    private void resumeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resumeMouseClicked
        // TODO add your handling code here:
        state = false;
        spstart.setVisible(false);
        spreset.setVisible(false);
        spresume.setVisible(true);
        splap.setVisible(false);
    }//GEN-LAST:event_resumeMouseClicked

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        // TODO add your handling code here:
        hr =0; mnt =0; scnd =0; milisecond=0;
        spstart.setVisible(false);
        spreset.setVisible(true);
        spresume.setVisible(false);
        splap.setVisible(false);
        state = false;
 
        lblhr2.setText("00");
        lblmnt.setText("00");
        lblsncd.setText("00");
        mlsecond.setText("00");
        txtarea.setText("");
        lap = "";
        counter =0;
        
        start.setEnabled(true);
        resume.setEnabled(false);
        reset.setEnabled(false);
        stlap.setEnabled(false);
    }//GEN-LAST:event_resetMouseClicked

    private void stopwatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopwatchMouseClicked
        // TODO add your handling code here:
        spstopwatch.setVisible(true);
        spclock.setVisible(false);
        sptimer.setVisible(false);
        clockpnl.removeAll();
        clockpnl.add(pnlstopwatch);
        clockpnl.repaint();
        clockpnl.revalidate();
    }//GEN-LAST:event_stopwatchMouseClicked

    private void clockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clockMouseClicked
        // TODO add your handling code here:
        spclock.setVisible(true);
        spstopwatch.setVisible(false);
        sptimer.setVisible(false);
        clockpnl.removeAll();
        clockpnl.add(pnlclock);
        clockpnl.repaint();
        basepnl.revalidate();
    }//GEN-LAST:event_clockMouseClicked

    private void clockMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clockMouseEntered
        // TODO add your handling code here:
        clock.setBackground(new Color(0,0,0));
    }//GEN-LAST:event_clockMouseEntered

    private void clockMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clockMouseExited
        // TODO add your handling code here:
        clock.setBackground(new Color(49,57,66));
    }//GEN-LAST:event_clockMouseExited

    private void stopwatchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopwatchMouseEntered
        // TODO add your handling code here:
        stopwatch.setBackground(new Color(0,0,0));
    }//GEN-LAST:event_stopwatchMouseEntered

    private void stopwatchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopwatchMouseExited
        // TODO add your handling code here:
        stopwatch.setBackground(new Color(49,57,66));
    }//GEN-LAST:event_stopwatchMouseExited

    private void timerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timerMouseClicked
        // TODO add your handling code here:
          spclock.setVisible(false);
          spstopwatch.setVisible(false);
          sptimer.setVisible(true);
          clockpnl.removeAll();
          clockpnl.add(pnltimer);
          clockpnl.repaint();
          basepnl.revalidate();
    }//GEN-LAST:event_timerMouseClicked

    private void cmbhourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbhourActionPerformed
        // TODO add your handling code here:
        hour.setText(cmbhour.getSelectedItem().toString());
        Hr = Integer.parseInt(hour.getText());
    }//GEN-LAST:event_cmbhourActionPerformed

    private void cmbminuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbminuteActionPerformed
        // TODO add your handling code here:
        minute.setText(cmbminute.getSelectedItem().toString());
        min = Integer.parseInt(minute.getText());
    }//GEN-LAST:event_cmbminuteActionPerformed

    private void cmbsecondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbsecondActionPerformed
        // TODO add your handling code here:
        second.setText(cmbsecond.getSelectedItem().toString());
        sec = Integer.parseInt(second.getText());
        
    }//GEN-LAST:event_cmbsecondActionPerformed

    private void timerstartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timerstartMouseClicked
        // TODO add your handling code here:
        
        spStart.setVisible(true);
        sppause.setVisible(false);
        spStop.setVisible(false);
        timerpause.setEnabled(true);
        timerstop.setEnabled(true);
      
        time = new Timer(1000, (ActionEvent e) -> {
             hour.setForeground(Color.white);
             minute.setForeground(Color.white);
             second.setForeground(Color.white);
            if(sec == 0)
            {
                sec = 60;
                min--;
            }
            if(min < 0)
            {
                sec = 60;
                min = 59;
                Hr--;
            }
             if(min ==0 && Hr == 0 && sec <= 60)
            {
                hour.setForeground(Color.red);
                minute.setForeground(Color.red);
                second.setForeground(Color.red);
            }
            if(Hr < 0)
            {
                time.stop();
                JOptionPane.showMessageDialog(null, "T I M E S  U P !!", "Warning Message", JOptionPane.WARNING_MESSAGE);
                Hr =0; min =0; sec =0;
                spStart.setVisible(false);
                sppause.setVisible(false);
                spStop.setVisible(false);
                
                cmbhour.setSelectedItem("00");
                cmbminute.setSelectedItem("00");
                cmbsecond.setSelectedItem("00");
            }
           
            else
            {
                sec--;
                
                if(sec<10)
                {
                    second.setText(String.valueOf("0"+sec));
                }
                else 
                {
                    second.setText(String.valueOf(sec));
                }
                
                
                if(min<10)
                {
                    minute.setText(String.valueOf("0"+min));
                }
                else 
                {
                    minute.setText(String.valueOf(min));
                }
                if(Hr<10)
                {
                    hour.setText(String.valueOf("0"+Hr));
                }
                else{
                    hour.setText(String.valueOf(Hr));
                }
            }
        });time.start();
        
    }//GEN-LAST:event_timerstartMouseClicked

    private void timerpauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timerpauseMouseClicked
        // TODO add your handling code here:
        spStart.setVisible(false);
        sppause.setVisible(true);
        spStop.setVisible(false);
        
        time.stop();
    }//GEN-LAST:event_timerpauseMouseClicked

    private void timerstopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timerstopMouseClicked
        // TODO add your handling code here:
        spStart.setVisible(false);
        sppause.setVisible(false);
        spStop.setVisible(true);
        
        
        time.stop();
        hour.setText("00");
        minute.setText("00");
        second.setText("00");
        cmbhour.setSelectedItem("00");
        cmbminute.setSelectedItem("00");
        cmbsecond.setSelectedItem("00");
    }//GEN-LAST:event_timerstopMouseClicked

    private void timerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timerMouseEntered
        // TODO add your handling code here:
        timer.setBackground(new Color(0,0,0));
        
    }//GEN-LAST:event_timerMouseEntered

    private void timerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timerMouseExited
        // TODO add your handling code here:
        timer.setBackground(new Color(49,57,66));
    }//GEN-LAST:event_timerMouseExited

    private void radio24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio24ActionPerformed
        // TODO add your handling code here:
        if(radio24.isSelected())
        {
            lblhour.setVisible(true);
            lbldot1.setVisible(true);
            lblminute.setVisible(true);
            lbldot2.setVisible(true);
            lblsecond.setVisible(true);
            localtime.setVisible(false);
            radio12.setSelected(false);
        }
    }//GEN-LAST:event_radio24ActionPerformed

    private void radio12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio12ActionPerformed
        // TODO add your handling code here:
        if(radio12.isSelected())
        {
            localtime.setVisible(true);
            lblhour.setVisible(false);
            lbldot1.setVisible(false);
            lblminute.setVisible(false);
            lbldot2.setVisible(false);
            lblsecond.setVisible(false);
            radio24.setSelected(false);
        }
    }//GEN-LAST:event_radio12ActionPerformed

    private void stlapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stlapMouseClicked
        // TODO add your handling code here:
        counter++;
       // lap+="\n"+counter+") "+lblhr2.getText()+" : "+lblmnt.getText()" : "+lblsncd.getText()" : "+mlsecond.getText()+"\n";
       lap+="\n"+counter+" . "+lblhr2.getText()+" : "+lblmnt.getText()+" : "+lblsncd.getText()+" : "+mlsecond.getText()+"\n";
       txtarea.setText(lap);
       
        spStart.setVisible(false);
        spresume.setVisible(false);
        spreset.setVisible(false);
        
    }//GEN-LAST:event_stlapMouseClicked

    private void stlapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stlapMousePressed
        // TODO add your handling code here:
        
        splap.setVisible(true);
    }//GEN-LAST:event_stlapMousePressed

    private void stlapMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stlapMouseReleased
        // TODO add your handling code here:
        splap.setVisible(false);
    }//GEN-LAST:event_stlapMouseReleased

    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered
        // TODO add your handling code here:
        close.setForeground(Color.red);
    }//GEN-LAST:event_closeMouseEntered

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited
        // TODO add your handling code here:
        close.setForeground(new Color(204,204,204));
    }//GEN-LAST:event_closeMouseExited

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        // TODO add your handling code here:
        minimize.setForeground(Color.white);
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        // TODO add your handling code here:
        minimize.setForeground(new Color(204,204,204));
    }//GEN-LAST:event_minimizeMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(code.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new code().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel basepnl;
    private javax.swing.JLabel clock;
    private javax.swing.JPanel clockpnl;
    private javax.swing.JLabel close;
    private javax.swing.JComboBox<String> cmbhour;
    private javax.swing.JComboBox<String> cmbminute;
    private javax.swing.JComboBox<String> cmbsecond;
    private javax.swing.JPanel dashboardpnl;
    private javax.swing.JLabel dot1;
    private javax.swing.JLabel dot2;
    private javax.swing.JLabel hour;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbldot1;
    private javax.swing.JLabel lbldot2;
    private javax.swing.JLabel lblhour;
    private javax.swing.JLabel lblhr2;
    private javax.swing.JLabel lblminute;
    private javax.swing.JLabel lblmnt;
    private javax.swing.JLabel lblsecond;
    private javax.swing.JLabel lblsncd;
    private javax.swing.JLabel localtime;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel minute;
    private javax.swing.JLabel mlsecond;
    private javax.swing.JPanel pnlclock;
    private javax.swing.JPanel pnlstopwatch;
    private javax.swing.JPanel pnltimer;
    private javax.swing.JRadioButton radio12;
    private javax.swing.JRadioButton radio24;
    private javax.swing.JLabel reset;
    private javax.swing.JLabel resume;
    private javax.swing.JLabel second;
    private javax.swing.JSeparator spStart;
    private javax.swing.JSeparator spStop;
    private javax.swing.JSeparator spclock;
    private javax.swing.JSeparator splap;
    private javax.swing.JSeparator sppause;
    private javax.swing.JSeparator spreset;
    private javax.swing.JSeparator spresume;
    private javax.swing.JSeparator spstart;
    private javax.swing.JSeparator spstopwatch;
    private javax.swing.JSeparator sptimer;
    private javax.swing.JLabel start;
    private javax.swing.JLabel stlap;
    private javax.swing.JLabel stopwatch;
    private javax.swing.JLabel timer;
    private javax.swing.JLabel timerpause;
    private javax.swing.JLabel timerstart;
    private javax.swing.JLabel timerstop;
    private javax.swing.JTextArea txtarea;
    // End of variables declaration//GEN-END:variables
}
